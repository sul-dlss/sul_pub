module SuggestionQueryXsd
  ##
  # An XSD for MatchedPublicationItemIdsForAuthor
  # This was generated by http://www.freeformatter.com/xsd-generator.html
  # The output was visually inspected and it was tweaked a little to
  # clarify that <Emails> and/or <PublicationItemIds> are acceptable; it was
  # created from various example data in the SW-API documentation.
  def suggestion_query_xsd
    xsd = <<-XSD
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="PublicationAuthorMatchParameters">
    <xs:complexType>
      <xs:all>
        <xs:element name="Authors">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Author" maxOccurs="unbounded" minOccurs="0">
                <!--
                  The ScienceWire API documentation does not include a
                  'Version' element within the 'Author' element.  When asked
                  about this element, they say "... we essentially implemented a
                  custom recommendation algorithm for Stanford to use,
                  behind the MatchedPublicationItemIdsForAuthor API. Because
                  that API is called elsewhere in TR, we did not simply want
                  to overwrite the old algorithm with the new and thus this
                  'Version' flag essentially says 'use the new algorithm.' I
                  believe if you make the call without the 'Version' value
                  present, you will get recommendations via the old
                  algorithm."
                -->
                <xs:complexType>
                  <xs:all>
                    <xs:element type="xs:string" name="LastName"/>
                    <xs:element type="xs:string" name="FirstName"/>
                    <xs:element type="xs:string" name="MiddleName" minOccurs="0"/>
                    <xs:element type="xs:string" name="AddressLine1" minOccurs="0"/>
                    <xs:element type="xs:string" name="AddressLine2" minOccurs="0"/>
                    <xs:element type="xs:string" name="City" minOccurs="0"/>
                    <xs:element type="xs:string" name="State" minOccurs="0"/>
                    <xs:element type="xs:string" name="Country" minOccurs="0"/>
                    <xs:element type="xs:int" name="Version"/>
                  </xs:all>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Emails" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element type="xs:string" name="string" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PublicationItemIds" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element type="xs:int" name="int" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element type="xs:string" name="DocumentCategory"/>
        <xs:element type="xs:boolean" name="LimitToHighQualityMatchesOnly"/>
      </xs:all>
    </xs:complexType>
  </xs:element>
</xs:schema>
XSD
    Nokogiri::XML::Schema(xsd)
  end
end
