module AuthorNameQueries
  ##
  # An initial guess at an XSD for the author PublicationQuery.
  # This was generated by http://www.freeformatter.com/xsd-generator.html
  # The output was visually inspected and it seems to be reasonable; it was
  # created from various example data in the SW-API documentation. Note that this
  # particular version of the XSD is more specific to the AuthorPublicationQuery
  # used in sul-pub, it might not capture all the possible Filter options.
  def author_publication_query_xsd
    xsd = <<-XSD
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="query">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Criterion">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Criteria">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Criterion" maxOccurs="unbounded" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="TextSearch" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element type="xs:string" name="QueryPredicate"/>
                                <xs:element type="xs:string" name="SearchType"/>
                                <xs:element type="xs:string" name="Columns"/>
                                <xs:element type="xs:integer" name="MaximumRows"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Filter" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element type="xs:string" name="Column"/>
                                <xs:element type="xs:string" name="Operator"/>
                                <xs:element type="xs:string" name="Value" minOccurs="0"/>
                                <xs:element name="Values" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element type="xs:string" name="Value" maxOccurs="unbounded" minOccurs="0"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute type="xs:string" name="ConjunctionOperator"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="Columns">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SortColumn">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element type="xs:string" name="Column"/>
                    <xs:element type="xs:string" name="Direction"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element type="xs:integer" name="MaximumRows"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>
XSD
    Nokogiri::XML::Schema(xsd)
  end

  def common_first_last_name
    <<-XML
    <![CDATA[
      <query xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <Criterion>
          <Criteria>
            <Criterion>
              <TextSearch>
                <QueryPredicate>("smith,james" or "SMITH,J") and "example"</QueryPredicate>
                <SearchType>ExactMatch</SearchType>
                <Columns>AggregateText</Columns>
                <MaximumRows>200</MaximumRows>
              </TextSearch>
            </Criterion>
            <Criterion>
              <Filter>
                <Column>AuthorLastName</Column>
                <Operator>BeginsWith</Operator>
                <Value>SMITH</Value>
              </Filter>
            </Criterion>
            <Criterion>
              <Filter>
                <Column>AuthorFirstName</Column>
                <Operator>BeginsWith</Operator>
                <Value>J</Value>
              </Filter>
            </Criterion>
            <Criterion>
              <Filter>
                <Column>DocumentCategory</Column>
                <Operator>In</Operator>
                <Values>
                  <Value>Journal Document</Value>
                  <Value>Conference Proceeding Document</Value>
                </Values>
              </Filter>
            </Criterion>
          </Criteria>
        </Criterion>
        <Columns>
          <SortColumn>
            <Column>Rank</Column>
            <Direction>Descending</Direction>
          </SortColumn>
        </Columns>
        <MaximumRows>200</MaximumRows>
      </query>
    ]]>
    XML
  end

  def middle_name_only
    <<-XML
    <![CDATA[
      <query xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <Criterion>
          <Criteria>
            <Criterion>
              <TextSearch>
                <QueryPredicate>("," or "," or ",M") and "stanford"</QueryPredicate>
                <SearchType>ExactMatch</SearchType>
                <Columns>AggregateText</Columns>
                <MaximumRows>200</MaximumRows>
              </TextSearch>
            </Criterion>
            <Criterion>
              <Filter>
                <Column>DocumentCategory</Column>
                <Operator>In</Operator>
                <Values>
                  <Value>Journal Document</Value>
                  <Value>Conference Proceeding Document</Value>
                </Values>
              </Filter>
            </Criterion>
          </Criteria>
        </Criterion>
        <Columns>
          <SortColumn>
            <Column>Rank</Column>
            <Direction>Descending</Direction>
          </SortColumn>
        </Columns>
        <MaximumRows>200</MaximumRows>
      </query>
    ]]>
    XML
  end

end
